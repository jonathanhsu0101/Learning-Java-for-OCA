java 常用類介紹

1. java.lang.String (學會使用幫助文檔)
	1.1 final 修飾，不能被其他類繼承
	1.2 String的構造
			直接賦值  String s = "hello"; 字符串常量的問題
	1.3 字符串連接的問題 +
	1.4 常用方法
			charAt(i), length(), indexOf(), lastIndexOf(), substring()等等
			
2. StringBuffer, StringBuilder 類
	字符串拼接時用這兩個類，效率高，節約內存
	如果用字符串 + ，性能差，且浪費很多空間，產生很多垃圾
	
	StringBuffer 線程安全，
	StringBuilder線程不安全，在多線程場景下性能比StringBuffer高
	
	案例：建立  String getString(int length)
				產生如下字符串
				(?,?,?)    ?的個數是 length 個
				
3. 正則表達式
	3.1 正則表達式(Pattern)
			用一些特殊的有意義的字符(死記)組成的字符串
			驗證輸入的郵箱是否合法
			Java JavaScipt PHP 等語言中都有正則表達式
			稍有區別
			
			java.util.Pattern   static  compile (正則表達式r)
										split(字符串)  對當前字符串用r分隔
			java.util.Matcher   p.matcher(字符串)
							find() 看是否有匹配  如果有返回true 會繼續往下找
							group()
			String matches、split
	3.2 原子：正則表達式的最基本的組成單位
			只要一個正則表達式可以單獨使用的字符，就是原子
			
			a. 所有可以顯示的字符，或非打印的字符
			b. .、?、*、+ 等都是有特殊意義的字符
				想作為原子使用必須轉義
				\\.、\\?、\\*、\\+
			c. 在正則表達式可以直接使用一些範圍的原子
				\\d 表示任意的一個十進制數字[0-9]
				\\D 表示任意的一個除數字之外的字符(非數字)
				\\s 表示任意的一個空白字福空格[\n\r\t\f]
				\\S 表示一個非空白
				\\w 表示任意的一個字 a-z A-Z 0-9_ [a-zA-Z0-9_]
				\\W 表示非a-z A-Z 0-9_ [^a-z A-Z 0-9_]
			d. 自己定義原子
				[0-9]
				[5-8]
				[a-z5-8]
				[^0-9] ^代表取反，不能是0-9必須放在[]裡面的第一個字符
				[^a-zA-Z0-9_]
			
	3.3 元字符：用來修飾原子的，不能單獨出現	
			* ：表示原子可以出現0次1次或者多次{0,}
			+ ：表示原子可出現1次或者多次{1,}
			? ：表示原子可出現0次或者1次{0,1}
			{} 用於自定義原子出現的次數
			{m} 出現m次
			{m, n} m到n次，包含m和n
			{m,} 最少出現m次，最多無限
			. ：表示除換行符之外的任意一個字符
			^ ：必須以什麼開頭
			$ ：必須結尾
			| ：表示或的關係
				
4. java.lang.Math

5. java.util.Date
		格式化日期
		字符串到日期的轉換
6. java.util.Calendar

7. java.lang.System
