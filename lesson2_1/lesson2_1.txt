繼承：主要是代碼的複用 (設計中意義會更多)
			繼承使用的關鍵字 extends
			java中的繼承是全部繼承，除了構造函數之外
				「class Circle extends Shape」
			---> Circle這個類就稱為Shape的子類 (派生類)
			---> Shape類就稱為Circle的父類 (基類)
	1. 繼承中，子父類的構造函數的問題
		a. 子類必須調用父類的構造函數 (構造函數是不被繼承的)
			如果沒有寫調用，那子類的構造函數默認會調用父類無參數的
			構造函數 (該句默認就在子類構造函數的第一句，等於「super();」)
			如果要顯示的調用那麼要用「super(參數列表);」，
			而且該句必須在子類構造函數中的第一句
			需要給父類構造函數傳參數
		b. 有子類、有父類的初始化順序：
			1. 先父類靜態 -> 然後子類靜態 //跟創建對象無關，只要用到
				類就會先加載其靜態屬性，並且只加載一次
			2. 父類的定義初始化 -> 父類的構造函數		
			3. 子類的定義初始化 -> 子類的構造函數
		c. 方法的重寫
			c.1 父類中有一個方法，到子類中有重新的實現
			c.2 訪問權限必須是非private，子類中還可以放大 (後續詳細講解)
			c.3 「super.方法();」調用父類被重寫的方法
					 (因為如果不重寫，則直接調用)
			
			總結super關鍵字：
				「super(參數列表);」---> 調用父類的構造函數，必須放在子類構造函數的第一行
				「super.方法();」---> 在子類重寫父類的方法裡面，調用父類的該方法
			
			d. 動態binding
				d.1 父類的引用可以引用任何子類的實例對象
				d.2 如果父類的引用引用了子類的實例，
						調用方法時，如果方法構成重寫，
						那麼調用子類的方法，否則調用父類的方法 ---> 動態綁定(binding)
			e. 對象數組
			
訪問權限
	private / protected / 默認 / public
	a. private用來修飾成員的話：該成員只能在類的內部訪問
	b. 包的概念：包是類名的一部份，主要用於命名的管理
		之前我們寫的類，都沒有聲明包，就是在默認包裡
		b.1 顯示聲明包 「package aa」包對於系統來說就是文件夾，
			但是對於java來說，包是類名的一部份
			對於有包的類：1. 直接編譯，建立包(就是文件夾)然後把.class扔進去
							2. 「javac -d . 類名(文件名).java」
									    -d . 代表默認在當前目錄下建立包
		b.2 導包：「import 包名.類名」 ，「 import 包名.*」
		b.3 默認的、protected、public
				默認的可以修飾成員和類 ---> 代表可以在同一包下直接訪問
				protected 修飾成員 ---> 在同一包中，或者不同包的子類中可以訪問
				public 修飾成員和類 ---> 在不同包中可以訪問
		b.4 classpath 環境變量
				尋找類的路徑，默認是 「.」 代表當前路徑
				多個設置的時候，中間用「,」隔開
				一般情況下，成員變量private，函數public
		b.5 構造函數private如何創建對象
				通過靜態方法

