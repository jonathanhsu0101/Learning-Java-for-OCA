面向對象 ---> 描述現實生活

1. 類
	把具有相同屬性和相似行為的一類事物稱為類。
	相同的屬性 ---> 用數據來表示即可 ---> 用一些數據類型就能表示
	相似的行為 ---> 用方法or函數表示即可
	找出相似的行為和相同的屬性的過程稱為抽象
	其中：找出相同的屬性稱為數據抽象
				找出相似的行為稱為過程抽象
	案例1：
			人類：
					相同的屬性 ---> 身高、體重、年齡
					相似的行為 ---> 吃飯、走路、睡覺    (不需要寫 public static 了。)
			通過封裝構成類
					class 類名 {屬性、行為} ---> 這個過程稱為封裝
	案例2：
			鐘類：
					相同的屬性：時、分、秒
					相似的行為：設置時間、顯示時間
	案例3：
			點類：
					相同的屬性：x, y
					相似的行為：到圓心的距離
											顯示點的座標
	屬性和行為誰先誰後，無所謂。
	每個屬性和行為的地位都是同等的，不分先後。
	
2. 對象
	類的實例就是對象 (創建一個類的實例，就是創建一個對象)
	如何創建對象：
		就現在而言：「類名  對象(引用)名 = new 類名()」;

3. 成員
	成員變量：類的屬性
	成員函數(方法)：類的行為
	暫時而言：類中只能放成員，成員都是並列的，不分先後

	暫時而言：成員必須通過對象去訪問    用.運算符
	
4. 初始化 (給成員變量進行賦值)
	a. 成員變量有默認值
	b. 構造函數 ---> 對象創建成功之後就有初始值
		b.1 構造函數是一個成員函數，該函數名與類名相同
		b.2 無任何返回類型，連 void 都沒有
		b.3 創建對象時會自動調用構造函數，不用顯示調用，
				並且創建一個對象就調用一次構造函數
		b.4 就現階段而言：構造函數的主要作用是給成員賦初始值的
		b.5 如果一個類沒有構造函數，那麼jvm會給
				類自動添加一個無參數的構造函數，稱為默認構造函數，如下：
					「public 類名(){}」
				一旦，人為的給了構造函數，那麼這個默認的構造函數
				就不存在了
	c. 函數重載
		c.1 同一個類中的一組函數
		c.2 這組函數，函數名稱都相同
		c.3 參數不同，(類型不同、個數不同、類型個數都不同)(名字不同沒有用)
		c.4 與函數的返回值類型無關
		c.5 在函數調用的時候，會根據參數的類型和個數自動匹配，
				決定調用哪一個。但是這種匹配不是精確的，符合
				就近原則(找最精確的去匹配，如果沒有最精確的，
				找能夠匹配得上的，這種能夠匹配得上，不需要人為轉換)
	d. 構造函數重載
	e. 定義初始化
		e.1 給成員變量直接賦值就是定義初始化，什麼時候用呢?當
				該類的所有對象的某個屬性值都一樣的時候
		e.2 順序呢? 也就是創建對象的時候，構造函數、定義初始化都被執行
				誰先? 誰後?
			e.2.1 定義初始化塊
			e.2.2 定義初始化先執行，然後再執行構造函數。如果存在多個定義初始化
					那麼，這些定義初始化，從上到下依次執行，都在構造函數之前
	
5. 內存分配
	5.1 創建對象過程的內存分配問題：
			堆、棧、方法區 ---> 類的信息都存放於此
	5.2 對象vs引用
	
6. this 引用 ---> 當前對象(的引用)
	6.1 this在什麼地方
			一個成員函數(非靜態的)訪問另外一個成員(非靜態的)
			前面都省略了this
	6.2 什麼是this
			當前對象(的引用) ---> i.e. 調用這個函數的那個對象(的引用)
			案例：初始化的時候，形式參數的變量名可以和成員一樣
						---> 成員前面用 this 區分
			案例：ClassDemo14.java
	6.3 「this(參數)」 ---> 調用另外一個構造函數，必須放在第一句，且只能調用一次
			引入案例：寫一個圓類 ClassDemo15.java
								圓心是一個點 (要用到點類Point)
	6.4 以後有 「類名.this」 的用法(講內部類的時候會講這個問題)
	
7. 靜態的成員
	引入案例：ClassDemo16
	7.1 靜態的成員變量是屬於類的，不屬於某個對象
	7.2 訪問時可以用 「類名.靜態屬性」 直接訪問，也可以用「對象.靜態屬性」訪問，後者不提倡
	7.3 靜態成員變量，在用到類的時候就會完成初始化加載 (驗證：ClassDemo17.java)
	7.4 靜態的成員方法
			可以用 「類名.方法」 直接訪問，也可以用「對象.方法」訪問，後者不提倡
			靜態的成員方法只能訪問靜態成員。(為什麼
			我們在學面向對象之前，函數都寫成了static？
			因為主函數本身是靜態的，只能訪問靜態成員)
			
8. 命令行參數
	運行時，給主函數的參數
	「java 類名 空格 參數1 空格 參數2 .........」
	
	
	
	
	